# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JavaCI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "README.md"
      - "**/README.md"
      - "CODE_OF_CONDUCT.md"
      - "CONTRIBUTING.md"
      - "pull_request_template.md"
      - "SECURITY.md"
      - "LICENSE"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/assets/**"
      - ".github/workflows/**"
      - "renovate.json"
      - ".whitesource"
      - "pom.xml"
      - ".qlty/**"

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Set up build environment
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          token: ${{ secrets.PUBLISH_KEY }}
      - name: Configure Git user
        run: |
          git config user.email ${{ secrets.EMAIL }}
          git config user.name "Esta Nagy"
      - name: Decode key
        run: |
          mkdir -p ~/.gnupg/
          echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > ~/.gnupg/secring.gpg
      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Publish to the Maven Central Repository
        run: >
          ./mvnw
          -Dsonar.coverage.jacoco.xmlReportPaths=./target/site/jacoco/jacoco.xml
          -Dgpg.keyname=${{ secrets.SIGNING_KEY_ID }}
          -Dgpg.secretKeyring=$(echo ~/.gnupg/secring.gpg)
          -B clean scm:tag deploy org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USER }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASS }}
          GITHUB_TOKEN: ${{ secrets.PUBLISH_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
